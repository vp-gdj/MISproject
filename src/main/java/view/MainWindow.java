/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;


import controller.DoctorJpaController;
import controller.DoctorgJpaController;
import controller.PatientJpaController;
import controller.PatientgJpaController;
import controller.PersonJpaController;
import controller.PersongJpaController;
import controller.exceptions.NonexistentEntityException;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import static java.lang.Integer.parseInt;
import static java.lang.String.valueOf;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import model.Doctor;
import model.Doctorg;
import model.Patient;
import model.Patientg;
import model.Persong;
/**
 *
 * @author Charlotte
 */
public class MainWindow extends javax.swing.JFrame {
    
    private final EntityManagerFactory emfac = Persistence.createEntityManagerFactory("databaseGlobale");
    private final DoctorgJpaController doctorgCtrl = new DoctorgJpaController(emfac);
    private final PersongJpaController persongCtrl = new PersongJpaController(emfac);
    private final PatientgJpaController patientgCtrl = new PatientgJpaController(emfac);
    
    Doctorg doctor = null;
    Patientg patient = null;
    
    
    

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Patient = new javax.swing.JButton();
        Doctor = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        SocialSec = new javax.swing.JTextField();
        Inami = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        addPersonPanel1 = new view.addPersonPanel();
        addPersonPanel2 = new view.addPersonPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Patient.setText("Create patient");
        Patient.setEnabled(false);
        Patient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientActionPerformed(evt);
            }
        });

        Doctor.setText("Create doctor");
        Doctor.setEnabled(false);
        Doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoctorActionPerformed(evt);
            }
        });

        jLabel7.setText("Doctor");

        jLabel9.setText("Patient");

        jLabel8.setText("Social Security :");

        SocialSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SocialSecActionPerformed(evt);
            }
        });

        Inami.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InamiActionPerformed(evt);
            }
        });

        jLabel10.setText("Inami :");

        jLabel1.setText("jLabel1");
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/noun_Patient_287071.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(Patient, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Doctor)
                .addGap(68, 68, 68))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SocialSec, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(37, 37, 37)
                .addComponent(Inami, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addPersonPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                        .addComponent(addPersonPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(335, 335, 335)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addPersonPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPersonPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SocialSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(Inami, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(225, 225, 225)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Patient, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void disableButtons(){
        Patient.setEnabled(false);
        Doctor.setEnabled(false);
        
        
        
    }
    
    /*private void refreshDoctorList(){
        List doctors = doctorCtrl.findDoctorEntities();
        EntityListModel<Doctor> model = new EntityListModel(doctors);
        
        itemList.setModel(model);
    }*/
    
    
    
    public void updatePatient(){
        if( patient == null ){
            patient = new Patientg();
        }
        
        patient.setPerson(addPersonPanel1.getPerson());
        int socialsec = parseInt(SocialSec.getText());
        patient.setSocialSec(socialsec);
    }
    
    public Doctorg getDoctor() {
        updateDoctor();
        
        return doctor;
    }

    public void setDoctor(Doctorg doctor) {
        this.doctor = doctor;
        
        addPersonPanel2.setPerson(this.doctor.getPerson());
        String inami = valueOf(this.doctor.getInami());
        Inami.setText(inami);
        
    }
    
        
        
    public void updateDoctor(){
        if( doctor == null ){
            doctor = new Doctorg();
        }
        
        doctor.setPerson(addPersonPanel2.getPerson());
        int inami = parseInt(Inami.getText());
        doctor.setInami(inami);
        
    }
    
    
    
    private void PatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientActionPerformed
        // TODO add your handling code here:
        //mettre ici code pour arriver sur la fenêtre "MainWindowPatient"
        MainWindowPatient patientPopup = new MainWindowPatient();
        patientPopup.setVisible(true);
        
        patientPopup.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent evt){
                
            }
        });
        
        updatePatient();

        // Create person if necessary:
        if( patient.getPerson().getIDperson() == null ){
            persongCtrl.create(patient.getPerson());           
        }
        // Create patient if necessary
        if( patient.getIDpatient() == null ){
            patientgCtrl.create(patient);
        }
        
        // Save changes
        try {
            persongCtrl.edit(patient.getPerson());
            patientgCtrl.edit(patient);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //this.dispose();   
        
    }//GEN-LAST:event_PatientActionPerformed
    
    private void DoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorActionPerformed
        // TODO add your handling code here:
        //mettre ici code pour arriver sur la fenêtre "MainWindowDoctor"
        
        
        MainWindowDoctor doctorPopup = new MainWindowDoctor();
        doctorPopup.setVisible(true);
        
        doctorPopup.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent evt){
            }
        });
        
        updateDoctor();
        
        // Create person if necessary:
        if( doctor.getPerson().getIDperson() == null ){
            persongCtrl.create(doctor.getPerson());
        }
        // Create doctor if necessary:
        if( doctor.getIDdoctor() == null ){
            doctorgCtrl.create(doctor);
        }
        
        // Save changes
        try{
            persongCtrl.edit(doctor.getPerson());
            doctorgCtrl.edit(doctor);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.dispose();
        
    }//GEN-LAST:event_DoctorActionPerformed

    private void SocialSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SocialSecActionPerformed
        // TODO add your handling code here:
        Patient.setEnabled(true);
    }//GEN-LAST:event_SocialSecActionPerformed

    private void InamiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InamiActionPerformed
        // TODO add your handling code here:
        Doctor.setEnabled(true);
    }//GEN-LAST:event_InamiActionPerformed
                                                  

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
               
            }
            
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Doctor;
    private javax.swing.JTextField Inami;
    private javax.swing.JButton Patient;
    private javax.swing.JTextField SocialSec;
    private view.addPersonPanel addPersonPanel1;
    private view.addPersonPanel addPersonPanel2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
